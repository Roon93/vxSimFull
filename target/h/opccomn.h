/* opccomn.h generated by WIDL Version 2.2.1 on 06-Dec-01 at 11:53:54 AM */

#include "comBase.h"

#ifndef __INCopccomn_h
#define __INCopccomn_h


#include "vxidl.h"

#ifdef __cplusplus
extern "C" {
#endif

int include_opccomn (void);

#ifndef __IOPCShutdown_FWD_DEFINED__
#define __IOPCShutdown_FWD_DEFINED__
typedef interface IOPCShutdown IOPCShutdown;
#endif /* __IOPCShutdown_FWD_DEFINED__ */

#ifndef __IOPCCommon_FWD_DEFINED__
#define __IOPCCommon_FWD_DEFINED__
typedef interface IOPCCommon IOPCCommon;
#endif /* __IOPCCommon_FWD_DEFINED__ */

#ifndef __IOPCServerList_FWD_DEFINED__
#define __IOPCServerList_FWD_DEFINED__
typedef interface IOPCServerList IOPCServerList;
#endif /* __IOPCServerList_FWD_DEFINED__ */

typedef struct
    {
    COM_VTBL_BEGIN
    COM_VTBL_ENTRY (HRESULT, QueryInterface, (IUnknown* pThis, REFIID riid, void** ppvObject));

#define IUnknown_QueryInterface(pThis, riid, ppvObject) pThis->lpVtbl->QueryInterface(COM_ADJUST_THIS(pThis), riid, ppvObject)

    COM_VTBL_ENTRY (ULONG, AddRef, (IUnknown* pThis));

#define IUnknown_AddRef(pThis) pThis->lpVtbl->AddRef(COM_ADJUST_THIS(pThis))

    COM_VTBL_ENTRY (ULONG, Release, (IUnknown* pThis));

#define IUnknown_Release(pThis) pThis->lpVtbl->Release(COM_ADJUST_THIS(pThis))

    COM_VTBL_ENTRY (HRESULT, ShutdownRequest, (IOPCShutdown* pThis, LPCWSTR szReason));

#define IOPCShutdown_ShutdownRequest(pThis, szReason) pThis->lpVtbl->ShutdownRequest(COM_ADJUST_THIS(pThis), szReason)

    COM_VTBL_END
    } IOPCShutdownVtbl;

#ifdef __cplusplus

interface IOPCShutdown : public IUnknown
{
virtual HRESULT ShutdownRequest (LPCWSTR szReason) =0;

};

#else

/* C interface definition for IOPCShutdown */

interface IOPCShutdown
    {
    const IOPCShutdownVtbl *  lpVtbl;
    };

#endif /* __cplusplus */

EXTERN_C const IID IID_IOPCShutdown;

typedef struct
    {
    COM_VTBL_BEGIN
    COM_VTBL_ENTRY (HRESULT, QueryInterface, (IUnknown* pThis, REFIID riid, void** ppvObject));

#define IUnknown_QueryInterface(pThis, riid, ppvObject) pThis->lpVtbl->QueryInterface(COM_ADJUST_THIS(pThis), riid, ppvObject)

    COM_VTBL_ENTRY (ULONG, AddRef, (IUnknown* pThis));

#define IUnknown_AddRef(pThis) pThis->lpVtbl->AddRef(COM_ADJUST_THIS(pThis))

    COM_VTBL_ENTRY (ULONG, Release, (IUnknown* pThis));

#define IUnknown_Release(pThis) pThis->lpVtbl->Release(COM_ADJUST_THIS(pThis))

    COM_VTBL_ENTRY (HRESULT, SetLocaleID, (IOPCCommon* pThis, LCID dwLcid));

#define IOPCCommon_SetLocaleID(pThis, dwLcid) pThis->lpVtbl->SetLocaleID(COM_ADJUST_THIS(pThis), dwLcid)

    COM_VTBL_ENTRY (HRESULT, GetLocaleID, (IOPCCommon* pThis, LCID* pdwLcid));

#define IOPCCommon_GetLocaleID(pThis, pdwLcid) pThis->lpVtbl->GetLocaleID(COM_ADJUST_THIS(pThis), pdwLcid)

    COM_VTBL_ENTRY (HRESULT, QueryAvailableLocaleIDs, (IOPCCommon* pThis, DWORD* pdwCount, LCID** pdwLcid));

#define IOPCCommon_QueryAvailableLocaleIDs(pThis, pdwCount, pdwLcid) pThis->lpVtbl->QueryAvailableLocaleIDs(COM_ADJUST_THIS(pThis), pdwCount, pdwLcid)

    COM_VTBL_ENTRY (HRESULT, GetErrorString, (IOPCCommon* pThis, HRESULT dwError, LPWSTR* ppString));

#define IOPCCommon_GetErrorString(pThis, dwError, ppString) pThis->lpVtbl->GetErrorString(COM_ADJUST_THIS(pThis), dwError, ppString)

    COM_VTBL_ENTRY (HRESULT, SetClientName, (IOPCCommon* pThis, LPCWSTR szName));

#define IOPCCommon_SetClientName(pThis, szName) pThis->lpVtbl->SetClientName(COM_ADJUST_THIS(pThis), szName)

    COM_VTBL_END
    } IOPCCommonVtbl;

#ifdef __cplusplus

interface IOPCCommon : public IUnknown
{
virtual HRESULT SetLocaleID (LCID dwLcid) =0;

virtual HRESULT GetLocaleID (LCID* pdwLcid) =0;

virtual HRESULT QueryAvailableLocaleIDs (DWORD* pdwCount, LCID** pdwLcid) =0;

virtual HRESULT GetErrorString (HRESULT dwError, LPWSTR* ppString) =0;

virtual HRESULT SetClientName (LPCWSTR szName) =0;

};

#else

/* C interface definition for IOPCCommon */

interface IOPCCommon
    {
    const IOPCCommonVtbl *  lpVtbl;
    };

#endif /* __cplusplus */

EXTERN_C const IID IID_IOPCCommon;

typedef struct
    {
    COM_VTBL_BEGIN
    COM_VTBL_ENTRY (HRESULT, QueryInterface, (IUnknown* pThis, REFIID riid, void** ppvObject));

#define IUnknown_QueryInterface(pThis, riid, ppvObject) pThis->lpVtbl->QueryInterface(COM_ADJUST_THIS(pThis), riid, ppvObject)

    COM_VTBL_ENTRY (ULONG, AddRef, (IUnknown* pThis));

#define IUnknown_AddRef(pThis) pThis->lpVtbl->AddRef(COM_ADJUST_THIS(pThis))

    COM_VTBL_ENTRY (ULONG, Release, (IUnknown* pThis));

#define IUnknown_Release(pThis) pThis->lpVtbl->Release(COM_ADJUST_THIS(pThis))

    COM_VTBL_ENTRY (HRESULT, EnumClassesOfCategories, (IOPCServerList* pThis, ULONG cImplemented, CATID* rgcatidImpl, ULONG cRequired, CATID* rgcatidReq, IEnumGUID** ppenumClsid));

#define IOPCServerList_EnumClassesOfCategories(pThis, cImplemented, rgcatidImpl, cRequired, rgcatidReq, ppenumClsid) pThis->lpVtbl->EnumClassesOfCategories(COM_ADJUST_THIS(pThis), cImplemented, rgcatidImpl, cRequired, rgcatidReq, ppenumClsid)

    COM_VTBL_ENTRY (HRESULT, GetClassDetails, (IOPCServerList* pThis, REFCLSID clsid, LPOLESTR* ppszProgID, LPOLESTR* ppszUserType));

#define IOPCServerList_GetClassDetails(pThis, clsid, ppszProgID, ppszUserType) pThis->lpVtbl->GetClassDetails(COM_ADJUST_THIS(pThis), clsid, ppszProgID, ppszUserType)

    COM_VTBL_ENTRY (HRESULT, CLSIDFromProgID, (IOPCServerList* pThis, LPCOLESTR szProgId, LPCLSID clsid));

#define IOPCServerList_CLSIDFromProgID(pThis, szProgId, clsid) pThis->lpVtbl->CLSIDFromProgID(COM_ADJUST_THIS(pThis), szProgId, clsid)

    COM_VTBL_END
    } IOPCServerListVtbl;

#ifdef __cplusplus

interface IOPCServerList : public IUnknown
{
virtual HRESULT EnumClassesOfCategories (ULONG cImplemented, CATID* rgcatidImpl, ULONG cRequired, CATID* rgcatidReq, IEnumGUID** ppenumClsid) =0;

virtual HRESULT GetClassDetails (REFCLSID clsid, LPOLESTR* ppszProgID, LPOLESTR* ppszUserType) =0;

virtual HRESULT CLSIDFromProgID (LPCOLESTR szProgId, LPCLSID clsid) =0;

};

#else

/* C interface definition for IOPCServerList */

interface IOPCServerList
    {
    const IOPCServerListVtbl *  lpVtbl;
    };

#endif /* __cplusplus */

EXTERN_C const IID IID_IOPCServerList;

#ifdef __cplusplus
}
#endif



#endif /* __INCopccomn_h */


